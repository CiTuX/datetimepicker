apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "28.0.2"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jni.srcDirs = ['jni']
        }
    }

    dependencies {
        implementation 'com.android.support:support-v13:23.4.0'
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
    }
}

if (project.hasProperty('ossrhUsername')) {

    apply plugin: 'maven'
    apply plugin: 'signing'

    group = 'com.github.citux'
    version = '0.2.0'

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'DateTimePicker Library'
                    packaging 'aar'
                    artifactId = 'datetimepicker'
                    description 'DatePicker and TimePicker from Google for Android 4.0+'
                    url 'https://github.com/CiTuX/datetimepicker'

                    scm {
                        connection 'scm:git@github.com:CiTuX/datetimepicker.git'
                        developerConnection 'scm:git@github.com:CiTuX/datetimepicker.git'
                        url 'https://github.com/CiTuX/datetimepicker'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'CiTuX'
                            name 'Paul St√∂hr'
                        }
                    }
                }
            }
        }
    }

    signing {
        sign configurations.archives
    }
    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
    }

    task androidJavadocsJar(type: Jar) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}
